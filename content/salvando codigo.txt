<!DOCTYPE html>
<!--Codingthai.com--> 
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <title>Hoverboard</title>
    <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
            crossorigin="anonymous"/>
            
        <link rel="stylesheet" href="../CSS/BaseStyle.css" />
  </head>
  <body>
    <header>
      <img src="../images/icons/gamerboxicon.svg" alt="" id="joystick">
      <div class="magic-grid" id="magic-grid"></div>
      
        <button id="btn-mobile" aria-expanded="false" aria-controls="nav" aria-haspopup="true" aria-label="Abrir Menu">
         <span id="hamburger"></span>
        </button>

        <div id="marginAdjust"></div>
        <nav class="nav" role="menu" id="main-navigation">
          <a href="#">Inicio</a>
          <a href="#">Jogos</a>
          <a href="#">Reviews</a>
          <a href="#">Usuários</a>
          <a href="#">Meu perfil</a>
        </nav>

    </header>
    
    <script src="../JAVASCRIPT/BaseScript.js"></script>
  </body>
</html>





* {
    box-sizing: border-box;
  }
  
  body {
    background-color: #111;
    display: flex;
    align-items: start;
    justify-content: center;
    height: 100vh;
    overflow: hidden;
    margin: 0;
  }
  header{
    display: flex;
    justify-content: space-around;
    height: 8%;
    align-items: center;
  }

  #joystick{
    height: 100%;
  }

  .magic-grid{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    height: 100%;
    margin-top: 1vh;
    width: 90%;
    overflow: hidden;
  }
  
  .square {
    background-color: #1d1d1d;
    box-shadow: 0 0 2px #000;
    height: 16px;
    width: 16px;
    margin: 2px;
    transition: 2s ease;
  }
  
  .square:hover {
    transition-duration: 0s;
  }

  .nav{
    padding-top: 1%;
    padding-right: 1%;
    display: flex; 
    position: absolute;
    width: 100%;
    justify-content: right;
    top: 1.5rem; /*mudar isso para tornar corretamente responsivo*/
    flex-direction: column;
    text-align: right;
    height: 0px;
    transition: .6s;
    overflow-y: auto;
    background-color: var(--corFundo);
    z-index: 10;
    gap: 3%;
    align-items: right;
} 
nav a{
  box-sizing: content-box;
}

  #btn-mobile{
    display: flex;
    padding: .5rem 1rem;
    font-size: 1rem;
    border: none;
    background: none;
    cursor: pointer;
    color: var(--corFonte);
    z-index: 100;

}
#hamburger{
    border-top: 2px solid;
    width: 40px;
    color: white;
}

#hamburger::after, #hamburger::before{
    content: '';
    display: block;
    width: inherit;
    height: 2px;
    background-color: currentColor;
    margin-top: 10px;
    transition: .3s;
    position: relative;
}



nav.active{ /*quando nav receber a classe active em jQuery o display será flex*/
    height: 10%;
    visibility: visible;
    position: absolute;
    z-index: 10;
}

#hamburger.active{ /*hamburger também recebe a classe active em jQuery*/
    border-top-color: transparent;
}

#hamburger.active::before{
    transform: rotate(135deg);
}

#hamburger.active::after{
    transform: rotate(-135deg);
    top: -12px; /*ajusta o "X" para ficar alinhado*/
}

#marginAdjust{
    position: absolute;
    background-color: blue;
}



const container = document.querySelector('div#magic-grid')
const colors = ['#e74c3c', '#8e44ad', '#3498db', '#e67e22', '#2ecc71']
const SQUARES = 800

for(let i = 0; i < SQUARES; i++) {
    const square = document.createElement('div')
    square.classList.add('square')

    square.addEventListener('mouseover', () => setColor(square))

    square.addEventListener('mouseout', () => removeColor(square))

    container.appendChild(square)
}

function setColor(element) {
   const color = getRandomColor()
   element.style.background = color
   element.style.boxShadow = `0 0 2px ${color}, 0 0 10px ${color}`
}

function removeColor(element) {
   element.style.background = '#1d1d1d'
   element.style.boxShadow = '0 0 2px #000'
}

function getRandomColor() {
    return colors[Math.floor(Math.random() * colors.length)]
}

    function toggleMenu(event){
        const nav = document.querySelector('nav')
        nav.classList.toggle('active'); //toggle significa adicione caso não tenha, remova caso tenha
        /*acessibilidade*/
        const active = nav.classList.contains('active')
        event.currentTarget.setAttribute('aria-expanded', active)
        if(active) {event.currentTarget.setAttribute('aria-label', 'Fechar Menu')} else event.currentTarget.setAttribute('aria-label', 'Abrir Menu') /*acessibilidade*/
    
        const spanBtn = document.querySelector('span#hamburger')
        spanBtn.classList.toggle('active')
    } /*Configurando a função em escopo global para que ela possa ser chamada em setupEventListeners*/

    
let btnMobile = document.querySelector('button#btn-mobile');
btnMobile.addEventListener('click', toggleMenu);


let adjustMenuMargin = () => {
    let menu = document.querySelector('nav#main-navigation')
    let adjust = document.querySelector('header').clientHeight

    menu.style.marginTop = `${adjust}px`
}

adjustMenuMargin()

window.addEventListener('resize', adjustMenuMargin)

